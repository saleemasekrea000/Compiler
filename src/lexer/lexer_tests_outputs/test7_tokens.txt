KEYWORD type
IDENTIFIER arrayOfInteger
IS is
KEYWORD array
LBRAC [
INTEGER_LITERAL 100
RBRAC ]
IDENTIFIER integer
PUNCTUATOR ;
ROUTINE routine
IDENTIFIER sum_of_even_numbers
LPAR (
IDENTIFIER lengthOfArray
PUNCTUATOR :
IDENTIFIER integer
PUNCTUATOR ,
IDENTIFIER arr
PUNCTUATOR :
IDENTIFIER arrayOfInteger
RPAR )
PUNCTUATOR :
IDENTIFIER integer
IS is
IDENTIFIER var
IDENTIFIER ans
PUNCTUATOR :
IDENTIFIER integer
IS is
INTEGER_LITERAL 0
PUNCTUATOR ;
KEYWORD for
IDENTIFIER i
KEYWORD in
INTEGER_LITERAL 1
RANGE ..
IDENTIFIER lengthOfArray
KEYWORD loop
KEYWORD if
IDENTIFIER arr
LBRAC [
IDENTIFIER i
RBRAC ]
OPERATOR %
INTEGER_LITERAL 2
OPERATOR =
INTEGER_LITERAL 0
KEYWORD then
IDENTIFIER ans
PUNCTUATOR :
OPERATOR =
IDENTIFIER ans
OPERATOR +
IDENTIFIER arr
LBRAC [
IDENTIFIER i
RBRAC ]
PUNCTUATOR ;
END end
END end
KEYWORD return
IDENTIFIER ans
PUNCTUATOR ;
END end
IDENTIFIER var
IDENTIFIER arr
PUNCTUATOR :
IDENTIFIER arrayOfInteger
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 1
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 1
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 2
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 2
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 3
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 3
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 4
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 4
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 5
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 5
PUNCTUATOR ;
IDENTIFIER arr
LBRAC [
INTEGER_LITERAL 6
RBRAC ]
PUNCTUATOR :
OPERATOR =
INTEGER_LITERAL 6
PUNCTUATOR ;
IDENTIFIER var
IDENTIFIER result
PUNCTUATOR :
IDENTIFIER integer
IS is
IDENTIFIER sum_of_even_numbers
LPAR (
INTEGER_LITERAL 6
PUNCTUATOR ,
IDENTIFIER arr
RPAR )
PUNCTUATOR ;
