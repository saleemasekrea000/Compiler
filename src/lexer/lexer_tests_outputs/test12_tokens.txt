KEYWORD type
IDENTIFIER point
PUNCTUATOR :
KEYWORD record
RELPAR {
KEYWORD var
IDENTIFIER x
PUNCTUATOR :
KEYWORD integer
PUNCTUATOR ;
KEYWORD var
IDENTIFIER y
PUNCTUATOR :
KEYWORD integer
PUNCTUATOR ;
RERLPR }
KEYWORD end
KEYWORD type
IDENTIFIER arrayOfPoint
KEYWORD is
KEYWORD array
LBRAC [
INT 100
RBRAC ]
IDENTIFIER point
PUNCTUATOR ;
KEYWORD routine
IDENTIFIER square_root
LPAR (
IDENTIFIER number
PUNCTUATOR :
KEYWORD integer
RPAR )
PUNCTUATOR :
KEYWORD real
KEYWORD is
KEYWORD var
IDENTIFIER guess
PUNCTUATOR :
KEYWORD real
KEYWORD is
REAL 1.0
PUNCTUATOR ;
KEYWORD var
IDENTIFIER epsilon
PUNCTUATOR :
KEYWORD real
KEYWORD is
REAL 0.00001
PUNCTUATOR ;
KEYWORD var
IDENTIFIER diff
PUNCTUATOR :
KEYWORD real
PUNCTUATOR ;
KEYWORD while
BOOL true
KEYWORD loop
KEYWORD var
IDENTIFIER quotient
PUNCTUATOR :
KEYWORD real
KEYWORD is
IDENTIFIER number
OPERATOR /
IDENTIFIER guess
PUNCTUATOR ;
KEYWORD var
IDENTIFIER new_guess
PUNCTUATOR :
KEYWORD real
KEYWORD is
LPAR (
IDENTIFIER guess
OPERATOR +
IDENTIFIER quotient
RPAR )
OPERATOR /
REAL 2.0
PUNCTUATOR ;
IDENTIFIER diff
PUNCTUATOR :
OPERATOR =
IDENTIFIER new_guess
OPERATOR -
IDENTIFIER guess
PUNCTUATOR ;
KEYWORD if
IDENTIFIER diff
OPERATOR <
IDENTIFIER epsilon
KEYWORD and
IDENTIFIER diff
OPERATOR >
OPERATOR -
IDENTIFIER epsilon
KEYWORD then
KEYWORD return
IDENTIFIER new_guess
PUNCTUATOR ;
KEYWORD end
IDENTIFIER guess
PUNCTUATOR :
OPERATOR =
IDENTIFIER new_guess
PUNCTUATOR ;
KEYWORD end
KEYWORD end
KEYWORD routine
IDENTIFIER distance
LPAR (
IDENTIFIER point1
PUNCTUATOR :
IDENTIFIER point
PUNCTUATOR ,
IDENTIFIER point2
PUNCTUATOR :
IDENTIFIER point
RPAR )
PUNCTUATOR :
KEYWORD real
KEYWORD is
KEYWORD var
IDENTIFIER ans
PUNCTUATOR :
KEYWORD real
KEYWORD is
REAL 0.0
PUNCTUATOR ;
IDENTIFIER ans
PUNCTUATOR :
OPERATOR =
LPAR (
IDENTIFIER point1.x
OPERATOR -
IDENTIFIER point2.x
RPAR )
OPERATOR *
LPAR (
IDENTIFIER point1.x
OPERATOR -
IDENTIFIER point2.x
RPAR )
OPERATOR +
LPAR (
IDENTIFIER point1.y
OPERATOR -
IDENTIFIER point2.y
RPAR )
OPERATOR *
LPAR (
IDENTIFIER point1.y
OPERATOR -
IDENTIFIER point2.y
RPAR )
PUNCTUATOR ;
IDENTIFIER ans
PUNCTUATOR :
OPERATOR =
IDENTIFIER square_root
LPAR (
IDENTIFIER ans
RPAR )
PUNCTUATOR ;
KEYWORD return
IDENTIFIER ans
PUNCTUATOR ;
KEYWORD end
KEYWORD routine
IDENTIFIER max_distance
LPAR (
IDENTIFIER points
PUNCTUATOR :
IDENTIFIER arrayOfPoint
PUNCTUATOR ,
IDENTIFIER numberOfPoints
PUNCTUATOR :
KEYWORD integer
RPAR )
PUNCTUATOR :
KEYWORD real
KEYWORD is
KEYWORD var
IDENTIFIER maxDist
PUNCTUATOR :
KEYWORD real
KEYWORD is
REAL 0.0
PUNCTUATOR ;
KEYWORD var
IDENTIFIER i
PUNCTUATOR :
KEYWORD integer
PUNCTUATOR ;
KEYWORD var
IDENTIFIER j
PUNCTUATOR :
KEYWORD integer
PUNCTUATOR ;
KEYWORD var
IDENTIFIER dist
PUNCTUATOR :
KEYWORD real
PUNCTUATOR ;
KEYWORD for
IDENTIFIER i
KEYWORD in
INT 1
RANGE ..
IDENTIFIER numberOfPoints
KEYWORD loop
KEYWORD for
IDENTIFIER j
KEYWORD in
IDENTIFIER i
OPERATOR +
INT 1
RANGE ..
IDENTIFIER numberOfPoints
KEYWORD loop
IDENTIFIER dist
PUNCTUATOR :
OPERATOR =
IDENTIFIER distance
LPAR (
IDENTIFIER points
LBRAC [
IDENTIFIER i
RBRAC ]
PUNCTUATOR ,
IDENTIFIER points
LBRAC [
IDENTIFIER j
RBRAC ]
RPAR )
PUNCTUATOR ;
KEYWORD if
IDENTIFIER dist
OPERATOR >
IDENTIFIER maxDist
KEYWORD then
IDENTIFIER maxDist
PUNCTUATOR :
OPERATOR =
IDENTIFIER dist
PUNCTUATOR ;
KEYWORD end
KEYWORD end
KEYWORD end
KEYWORD return
IDENTIFIER maxDist
PUNCTUATOR ;
KEYWORD end
KEYWORD var
IDENTIFIER points
PUNCTUATOR :
IDENTIFIER arrayOfPoint
PUNCTUATOR ;
KEYWORD var
IDENTIFIER numPoints
PUNCTUATOR :
KEYWORD integer
PUNCTUATOR ;
KEYWORD var
IDENTIFIER maxDist
PUNCTUATOR :
KEYWORD real
PUNCTUATOR ;
IDENTIFIER points
LBRAC [
INT 1
RBRAC ]
PUNCTUATOR :
OPERATOR =
LPAR (
IDENTIFIER x
PUNCTUATOR :
OPERATOR =
INT 1
PUNCTUATOR ,
IDENTIFIER y
PUNCTUATOR :
OPERATOR =
INT 1
RPAR )
PUNCTUATOR ;
IDENTIFIER points
LBRAC [
INT 2
RBRAC ]
PUNCTUATOR :
OPERATOR =
LPAR (
IDENTIFIER x
PUNCTUATOR :
OPERATOR =
INT 4
PUNCTUATOR ,
IDENTIFIER y
PUNCTUATOR :
OPERATOR =
INT 5
RPAR )
PUNCTUATOR ;
IDENTIFIER points
LBRAC [
INT 3
RBRAC ]
PUNCTUATOR :
OPERATOR =
LPAR (
IDENTIFIER x
PUNCTUATOR :
OPERATOR =
INT 7
PUNCTUATOR ,
IDENTIFIER y
PUNCTUATOR :
OPERATOR =
INT 1
RPAR )
PUNCTUATOR ;
IDENTIFIER points
LBRAC [
INT 4
RBRAC ]
PUNCTUATOR :
OPERATOR =
LPAR (
IDENTIFIER x
PUNCTUATOR :
OPERATOR =
INT 1
PUNCTUATOR ,
IDENTIFIER y
PUNCTUATOR :
OPERATOR =
INT 8
RPAR )
PUNCTUATOR ;
IDENTIFIER numPoints
PUNCTUATOR :
OPERATOR =
INT 4
PUNCTUATOR ;
IDENTIFIER maxDist
PUNCTUATOR :
OPERATOR =
IDENTIFIER max_distance
LPAR (
IDENTIFIER points
PUNCTUATOR ,
IDENTIFIER numPoints
RPAR )
PUNCTUATOR ;

