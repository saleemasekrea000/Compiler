type point : record {
    var x : integer;
    var y : integer;
}
end

type arrayOfPoint is array[100] point;

routine square_root(number: integer) : real is
    var guess : real is 1.0;
    var epsilon : real is 0.00001;
    var diff : real;

    while true loop
        var quotient : real is number / guess;
        var new_guess : real is (guess + quotient) / 2.0;
        diff := new_guess - guess;
        if diff < epsilon and diff > -epsilon then
            return new_guess;
        end
        guess := new_guess;
    end
end

routine distance(point1: point, point2: point) : real is
    var ans : real is 0.0;
    ans := (point1.x - point2.x) * (point1.x - point2.x) + (point1.y - point2.y) * (point1.y - point2.y);
    ans := square_root(ans);
    return ans;
end

routine max_distance(points: arrayOfPoint, numberOfPoints: integer) : real is
    var maxDist : real is 0.0;
    var i : integer;
    var j : integer;
    var dist : real;

    for i in 1 .. numberOfPoints loop
        for j in i + 1 .. numberOfPoints loop
            dist := distance(points[i], points[j]);
            if dist > maxDist then
                maxDist := dist;
            end
        end
    end

    return maxDist;
end

var points : arrayOfPoint;
var numPoints : integer;
var maxDist : real;

points[1] := (x := 1, y := 1);
points[2] := (x := 4, y := 5);
points[3] := (x := 7, y := 1);
points[4] := (x := 1, y := 8);

numPoints := 4;

maxDist := max_distance(points, numPoints);

